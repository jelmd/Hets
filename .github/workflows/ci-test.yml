# Build hets and run related tests for CI
name: CI-Test

env:
  SKIP_STACK: 0
  SKIP_BUILD: 0
  SKIP_TEST: 0
  SKIP_HADDOCK: 0
  PKG_CACHE: /var/tmp/pkgs
  SMART_CACHE: 1
  NO_DOCS: 1
  #MKDBG: 1
  STACK_ROOT: /var/tmp/stack
  HETS_BASEDIR: /var/tmp/hets
  HETS_BUILD_DIR: ${{env.HETS_BASEDIR}}/build
  PREFIX: /tmp/hets-install
  PATH: ${{env.PREFIX}}/bin:${STACK_ROOT}/bin:${{env.PATH}}
  HETS_LIB: /var/tmp/Hets-lib
  HETS_MAGIC: ${{env.TRAVIS_BUILD_DIR}}/magic/hets.magic
  TH: utils/travis-helper.sh

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request cwfor the given branches
  push:
    branches:
      - gha
  pull_request:
    branches:
      - gha

# A workflow run is made up of one or more jobs that can run seq. or in parallel
jobs:
  job_1:
    name: Show environment
    # TBD: ubuntu-20.04 or macos-11
    runs-on: ubuntu-18.04
    steps:
      # checkout the hets repo
      - uses: actions/checkout@v2
      # execute the follwoing commands:
      - name: Show environment
        run: |
          set
          echo '###########################################################'
          grep '^model name' /proc/cpuinfo
          egrep '^(Mem|Swap)' /proc/meminfo
          echo '###########################################################'
          uname -a
          ip a
          networkctl
          networkctl status
  job_2:
    name: Stack
    runs-on: ubuntu-18.04
    needs: job_1
      # build stack
      # ${{github.workspace}}/build  ${{env.BUILD_TYPE}}
      # CI=true                   RUNNER_WORKSPACE=/home/runner/work/$REPO
      # GITHUB_WORKFLOW=CI-Test   GITHUB_WORKSPACE=${RUNNER_WORKSPACE}/$REPO
      # GITHUB_EVENT_NAME=push    GITHUB_REPOSITORY=jelmd/$REPO
      # GITHUB_REF_TYPE=branch    GITHUB_REF=refs/heads/$BRANCH
      # LANG=C.UTF-8
    steps:
      - name: Stack
        run: make stack
